input {
    keyboard {
        track-layout "global"
        repeat-delay 350
        repeat-rate 30
        xkb {
            layout "us,ru"
            options "grp:alt_shift_toggle,caps:swapescape"
        }
    }

    touchpad {
        tap
        natural-scroll
    }

    mouse {
        accel-speed -0.1
        accel-profile "adaptive"
    }

    focus-follows-mouse max-scroll-amount="10%"
}

output "DP-3" {
    mode "1280x1024@75.025"
    position x=-1280 y=0
}

output "HDMI-A-1" {
    mode "1920x1080@74.973"
    position x=0 y=0
}

environment {
    DISPLAY ":0"
    NIXOS_OZONE_WL "1"
}

layout {
    gaps 16
    center-focused-column "never"

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    default-column-width { proportion 0.66667; }

    focus-ring {
        width 4
        active-color "#8cf6d4"
        inactive-color "#111716"
    }

    border {
        off
    }
}

spawn-at-startup "materialgram"
spawn-at-startup "vesktop" "--ozone-platform-hint=auto"
spawn-at-startup "/usr/lib/polkit-kde-authentication-agent-1"
spawn-at-startup "mpvpaper" "-vp" "-o" "no-audio loop" "HDMI-A-1" "/drvD/Profile/Videos/Hidamari/cat-in-the-swamp-moewalls-com-1080p.mp4"
spawn-at-startup "swww-daemon"
spawn-at-startup "swww" "img" "~/Desktop/wallpaper.png" "--transition-type" "fade"

prefer-no-csd

screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

animations {
    window-close {
        duration-ms 200
        curve "linear"
        custom-shader r"
            vec4 close_color(vec3 coords_geo, vec3 size_geo) {
                float progress = niri_clamped_progress * niri_clamped_progress;
                vec2 coords = (coords_geo.xy - vec2(0.5, 1.0)) * size_geo.xy;
                coords.y -= progress * 200.0;
                float random = (niri_random_seed - 0.5) / 2.0;
                random = sign(random) - random;
                float max_angle = 0.05 * random;
                float angle = progress * max_angle;
                mat2 rotate = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));
                coords = rotate * coords;
                coords_geo = vec3(coords / size_geo.xy + vec2(0.5, 1.0), 1.0);
                vec3 coords_tex = niri_geo_to_tex * coords_geo;
                vec4 color = texture2D(niri_tex, coords_tex.st);
                return color * (1.0 - niri_clamped_progress);
            }
        "
    }
}

window-rule {
    min-height 400
    min-width 420
}

window-rule {
    match app-id=r#"^org\.wezfurlong\.wezterm$"#
    default-column-width {}
}

window-rule {
    match app-id="kitty"
    default-column-width { proportion 0.5; }
}

window-rule {
    match app-id="org.gnome.Characters"
    default-column-width { proportion 0.4; }
}

window-rule {
    match app-id="firefox"
    default-column-width { fixed 1425; }
    open-on-output "HDMI-A-1"
    draw-border-with-background true
}

window-rule {
    match app-id="io.github.kukuruzka165.materialgram"
    default-column-width { fixed 440; }
    open-on-output "HDMI-A-1"
}

window-rule {
    match app-id="vesktop"
    default-column-width { fixed 920; }
    open-maximized true
    open-on-output "DP-3"
}

window-rule {
    match app-id="code"
    default-column-width { fixed 920; }
    open-maximized true
}

window-rule {
    match app-id="vlc"
    default-column-width { fixed 920; }
    open-maximized true
}

window-rule {
    match app-id="org.gnome.Nautilus"
    default-column-width { proportion 0.75; }
}

window-rule {
    match title="Friends List" app-id="steam"
    default-column-width { fixed 340; }
}

window-rule {
    match app-id="Waydroid"
    default-column-width { fixed 1256; }
}

binds {
    Mod+Shift+Slash { show-hotkey-overlay; }

    Mod+Return { spawn "kitty"; }
    Mod+x { spawn "firefox"; }
    Mod+t { spawn "Thunar"; }
    Mod+D { spawn "fuzzel"; }
    Super+Alt+L { spawn "swaylock"; }
    Mod+V { spawn "clapboard"; }

    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
    XF86AudioNext        allow-when-locked=true { spawn "playerctl" "next"; }
    XF86AudioPrev        allow-when-locked=true { spawn "playerctl" "previous"; }
    XF86AudioPlay        allow-when-locked=true { spawn "playerctl" "play-pause"; }

    Mod+q { close-window; }

    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-down; }
    Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }
    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-down; }
    Mod+K     { focus-window-up; }
    Mod+L     { focus-column-right; }

    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Down  { move-window-down; }
    Mod+Ctrl+Up    { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }
    Mod+Ctrl+H     { move-column-left; }
    Mod+Ctrl+J     { move-window-down; }
    Mod+Ctrl+K     { move-window-up; }
    Mod+Ctrl+L     { move-column-right; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Mod+Shift+Left  { focus-monitor-left; }
    Mod+Shift+Down  { focus-monitor-down; }
    Mod+Shift+Up    { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }
    Mod+Shift+H     { focus-monitor-left; }
    Mod+Shift+J     { focus-monitor-down; }
    Mod+Shift+K     { focus-monitor-up; }
    Mod+Shift+L     { focus-monitor-right; }

    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }

    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }

    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    Mod+Comma  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    Mod+R { switch-preset-column-width; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }
    Mod+C { center-column; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    Print { screenshot; }
    Mod+Shift+S { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }
    Mod+Shift+R { spawn "fish" "-c" "wl-screenrec -f ~/Videos/Screenrecs/screenrec-$(math 1 + $(ls ~/Videos/Screenrecs/ | count)).mp4 -g $(slurp -d -F \"Mononoki Nerd Font Mono\" -c \"#8bf6d4\") -b 3MB --audio --audio-device alsa_output.pci-0000_08_00.3.analog-stereo.monitor"; }
    Mod+Shift+Ctrl+R { spawn "fish" "-c" "killall wl-screenrec && notify-send \"wl-screenrec\" \"Finished recording.\""; }

    Mod+Shift+E { quit; }

    XF86MonBrightnessUp   allow-when-locked=true { spawn "brightnessctl" "set" "5%+"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "set" "5%-"; }

    Mod+F5  allow-when-locked=true { spawn "brightnessctl" "set" "10%-"; }
    Mod+F6  allow-when-locked=true { spawn "brightnessctl" "set" "10%+"; }

    Mod+Shift+F5  allow-when-locked=true { spawn "brightnessctl" "set" "5%-"; }
    Mod+Shift+F6  allow-when-locked=true { spawn "brightnessctl" "set" "5%+"; }

    Mod+Ctrl+F5   allow-when-locked=true { spawn "brightnessctl" "set" "1"; }
    Mod+Ctrl+F6   allow-when-locked=true { spawn "brightnessctl" "set" "100%"; }

    Mod+W { spawn "fish" "-c" "swww img ~/Desktop/wallpaper.png --transition-type fade"; }
    Mod+Shift+W { spawn "fish" "-c" "find ~/Pictures/Wallpapers -type f \\( -iname '*.jpg' -o -iname '*.png' -o -iname '*.jpeg' \\) | shuf -n 1 | xargs swww img --transition-type fade"; }

    Mod+Shift+P { power-off-monitors; }
}
